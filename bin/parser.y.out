Terminale, die in Grammatik unbenutzt sind

   COLON


Zustand 125 Konflikte: 1 Schiebe/Reduziere


Grammatik

    0 $accept: program $end

    1 program: program_element_list

    2 program_element_list: program_element_list program_element
    3                     | program_element

    4 program_element: variable_declaration SEMICOLON
    5                | function_declaration SEMICOLON
    6                | function_definition
    7                | SEMICOLON

    8 type: INT
    9     | VOID

   10 variable_declaration: variable_declaration COMMA identifier_declaration
   11                     | type identifier_declaration

   12 identifier_declaration: ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID

   14 function_definition: function_start PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | function_start function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE

   16 function_declaration: function_start PARA_CLOSE
   17                     | function_start function_parameter_list PARA_CLOSE

   18 function_start: type ID PARA_OPEN

   19 function_parameter_list: function_parameter
   20                        | function_parameter_list COMMA function_parameter

   21 function_parameter: type identifier_declaration

   22 stmt_list: %empty
   23          | stmt_list stmt

   24 stmt: stmt_block
   25     | variable_declaration SEMICOLON
   26     | expression SEMICOLON
   27     | stmt_conditional
   28     | stmt_loop
   29     | RETURN expression SEMICOLON
   30     | RETURN SEMICOLON
   31     | SEMICOLON

   32 stmt_block: BRACE_OPEN stmt_list BRACE_CLOSE

   33 stmt_conditional: IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt

   35 stmt_loop: WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

   37 expression: expression ASSIGN expression
   38           | expression LOGICAL_OR expression
   39           | expression LOGICAL_AND expression
   40           | LOGICAL_NOT expression
   41           | expression EQ expression
   42           | expression NE expression
   43           | expression LS expression
   44           | expression LSEQ expression
   45           | expression GTEQ expression
   46           | expression GT expression
   47           | expression PLUS expression
   48           | expression MINUS expression
   49           | expression SHIFT_LEFT expression
   50           | expression SHIFT_RIGHT expression
   51           | expression MUL expression
   52           | expression DIV expression
   53           | expression MOD expression
   54           | MINUS expression
   55           | PLUS expression
   56           | ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | PARA_OPEN expression PARA_CLOSE
   58           | function_call
   59           | primary

   60 primary: NUM
   61        | ID

   62 function_call: ID PARA_OPEN PARA_CLOSE
   63              | ID PARA_OPEN function_call_parameters PARA_CLOSE

   64 function_call_parameters: function_call_parameters COMMA expression
   65                         | expression


Terminale und die Regeln, in denen sie verwendet werden

$end (0) 0
error (256)
DO (258) 36
WHILE (259) 35 36
IF (260) 33 34
ELSE (261) 34
INT (262) 8
VOID (263) 9
RETURN (264) 29 30
COLON (265)
COMMA (266) 10 20 64
SEMICOLON (267) 4 5 7 25 26 29 30 31 36
BRACE_OPEN (268) 14 15 32
BRACE_CLOSE (269) 14 15 32
BRACKET_OPEN (270) 12 56
BRACKET_CLOSE (271) 12 56
PARA_OPEN (272) 18 33 34 35 36 57 62 63
PARA_CLOSE (273) 14 15 16 17 33 34 35 36 57 62 63
ID (274) 12 13 18 56 61 62 63
NUM (275) 12 60
ASSIGN (276) 37
LOGICAL_OR (277) 38
LOGICAL_AND (278) 39
EQ (279) 41
NE (280) 42
LS (281) 43
LSEQ (282) 44
GTEQ (283) 45
GT (284) 46
SHIFT_LEFT (285) 49
SHIFT_RIGHT (286) 50
PLUS (287) 47 55
MINUS (288) 48 54
MUL (289) 51
DIV (290) 52
MOD (291) 53
LOGICAL_NOT (292) 40
UNARY_MINUS (293)
UNARY_PLUS (294)


Nicht-Terminal und die Regeln, in denen sie verwendet werden

$accept (40)
    auf der linken Seite: 0
program (41)
    auf der linken Seite: 1, auf der rechten Seite: 0
program_element_list (42)
    auf der linken Seite: 2 3, auf der rechten Seite: 1 2
program_element (43)
    auf der linken Seite: 4 5 6 7, auf der rechten Seite: 2 3
type (44)
    auf der linken Seite: 8 9, auf der rechten Seite: 11 18 21
variable_declaration (45)
    auf der linken Seite: 10 11, auf der rechten Seite: 4 10 25
identifier_declaration (46)
    auf der linken Seite: 12 13, auf der rechten Seite: 10 11 21
function_definition (47)
    auf der linken Seite: 14 15, auf der rechten Seite: 6
function_declaration (48)
    auf der linken Seite: 16 17, auf der rechten Seite: 5
function_start (49)
    auf der linken Seite: 18, auf der rechten Seite: 14 15 16 17
function_parameter_list (50)
    auf der linken Seite: 19 20, auf der rechten Seite: 15 17 20
function_parameter (51)
    auf der linken Seite: 21, auf der rechten Seite: 19 20
stmt_list (52)
    auf der linken Seite: 22 23, auf der rechten Seite: 14 15 23 32
stmt (53)
    auf der linken Seite: 24 25 26 27 28 29 30 31, auf der rechten Seite:
    23 33 34 35 36
stmt_block (54)
    auf der linken Seite: 32, auf der rechten Seite: 24
stmt_conditional (55)
    auf der linken Seite: 33 34, auf der rechten Seite: 27
stmt_loop (56)
    auf der linken Seite: 35 36, auf der rechten Seite: 28
expression (57)
    auf der linken Seite: 37 38 39 40 41 42 43 44 45 46 47 48 49 50
    51 52 53 54 55 56 57 58 59, auf der rechten Seite: 26 29 33 34
    35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
    57 64 65
primary (58)
    auf der linken Seite: 60 61, auf der rechten Seite: 56 59
function_call (59)
    auf der linken Seite: 62 63, auf der rechten Seite: 58
function_call_parameters (60)
    auf der linken Seite: 64 65, auf der rechten Seite: 63 64


Zustand 0

    0 $accept: . program $end
    1 program: . program_element_list
    2 program_element_list: . program_element_list program_element
    3                     | . program_element
    4 program_element: . variable_declaration SEMICOLON
    5                | . function_declaration SEMICOLON
    6                | . function_definition
    7                | . SEMICOLON
    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   14 function_definition: . function_start PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | . function_start function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: . function_start PARA_CLOSE
   17                     | . function_start function_parameter_list PARA_CLOSE
   18 function_start: . type ID PARA_OPEN

    INT        schiebe und gehe zu Zustand 1 über
    VOID       schiebe und gehe zu Zustand 2 über
    SEMICOLON  schiebe und gehe zu Zustand 3 über

    program               gehe zu Zustand 4 über
    program_element_list  gehe zu Zustand 5 über
    program_element       gehe zu Zustand 6 über
    type                  gehe zu Zustand 7 über
    variable_declaration  gehe zu Zustand 8 über
    function_definition   gehe zu Zustand 9 über
    function_declaration  gehe zu Zustand 10 über
    function_start        gehe zu Zustand 11 über


Zustand 1

    8 type: INT .

    $default  reduziere mit Regel 8 (type)


Zustand 2

    9 type: VOID .

    $default  reduziere mit Regel 9 (type)


Zustand 3

    7 program_element: SEMICOLON .

    $default  reduziere mit Regel 7 (program_element)


Zustand 4

    0 $accept: program . $end

    $end  schiebe und gehe zu Zustand 12 über


Zustand 5

    1 program: program_element_list .  [$end]
    2 program_element_list: program_element_list . program_element
    4 program_element: . variable_declaration SEMICOLON
    5                | . function_declaration SEMICOLON
    6                | . function_definition
    7                | . SEMICOLON
    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   14 function_definition: . function_start PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | . function_start function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: . function_start PARA_CLOSE
   17                     | . function_start function_parameter_list PARA_CLOSE
   18 function_start: . type ID PARA_OPEN

    INT        schiebe und gehe zu Zustand 1 über
    VOID       schiebe und gehe zu Zustand 2 über
    SEMICOLON  schiebe und gehe zu Zustand 3 über

    $default  reduziere mit Regel 1 (program)

    program_element       gehe zu Zustand 13 über
    type                  gehe zu Zustand 7 über
    variable_declaration  gehe zu Zustand 8 über
    function_definition   gehe zu Zustand 9 über
    function_declaration  gehe zu Zustand 10 über
    function_start        gehe zu Zustand 11 über


Zustand 6

    3 program_element_list: program_element .

    $default  reduziere mit Regel 3 (program_element_list)


Zustand 7

   11 variable_declaration: type . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID
   18 function_start: type . ID PARA_OPEN

    ID  schiebe und gehe zu Zustand 14 über

    identifier_declaration  gehe zu Zustand 15 über


Zustand 8

    4 program_element: variable_declaration . SEMICOLON
   10 variable_declaration: variable_declaration . COMMA identifier_declaration

    COMMA      schiebe und gehe zu Zustand 16 über
    SEMICOLON  schiebe und gehe zu Zustand 17 über


Zustand 9

    6 program_element: function_definition .

    $default  reduziere mit Regel 6 (program_element)


Zustand 10

    5 program_element: function_declaration . SEMICOLON

    SEMICOLON  schiebe und gehe zu Zustand 18 über


Zustand 11

    8 type: . INT
    9     | . VOID
   14 function_definition: function_start . PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | function_start . function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: function_start . PARA_CLOSE
   17                     | function_start . function_parameter_list PARA_CLOSE
   19 function_parameter_list: . function_parameter
   20                        | . function_parameter_list COMMA function_parameter
   21 function_parameter: . type identifier_declaration

    INT         schiebe und gehe zu Zustand 1 über
    VOID        schiebe und gehe zu Zustand 2 über
    PARA_CLOSE  schiebe und gehe zu Zustand 19 über

    type                     gehe zu Zustand 20 über
    function_parameter_list  gehe zu Zustand 21 über
    function_parameter       gehe zu Zustand 22 über


Zustand 12

    0 $accept: program $end .

    $default  annehmen


Zustand 13

    2 program_element_list: program_element_list program_element .

    $default  reduziere mit Regel 2 (program_element_list)


Zustand 14

   12 identifier_declaration: ID . BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID .  [COMMA, SEMICOLON]
   18 function_start: type ID . PARA_OPEN

    BRACKET_OPEN  schiebe und gehe zu Zustand 23 über
    PARA_OPEN     schiebe und gehe zu Zustand 24 über

    $default  reduziere mit Regel 13 (identifier_declaration)


Zustand 15

   11 variable_declaration: type identifier_declaration .

    $default  reduziere mit Regel 11 (variable_declaration)


Zustand 16

   10 variable_declaration: variable_declaration COMMA . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID

    ID  schiebe und gehe zu Zustand 25 über

    identifier_declaration  gehe zu Zustand 26 über


Zustand 17

    4 program_element: variable_declaration SEMICOLON .

    $default  reduziere mit Regel 4 (program_element)


Zustand 18

    5 program_element: function_declaration SEMICOLON .

    $default  reduziere mit Regel 5 (program_element)


Zustand 19

   14 function_definition: function_start PARA_CLOSE . BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: function_start PARA_CLOSE .  [SEMICOLON]

    BRACE_OPEN  schiebe und gehe zu Zustand 27 über

    $default  reduziere mit Regel 16 (function_declaration)


Zustand 20

   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID
   21 function_parameter: type . identifier_declaration

    ID  schiebe und gehe zu Zustand 25 über

    identifier_declaration  gehe zu Zustand 28 über


Zustand 21

   15 function_definition: function_start function_parameter_list . PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   17 function_declaration: function_start function_parameter_list . PARA_CLOSE
   20 function_parameter_list: function_parameter_list . COMMA function_parameter

    COMMA       schiebe und gehe zu Zustand 29 über
    PARA_CLOSE  schiebe und gehe zu Zustand 30 über


Zustand 22

   19 function_parameter_list: function_parameter .

    $default  reduziere mit Regel 19 (function_parameter_list)


Zustand 23

   12 identifier_declaration: ID BRACKET_OPEN . NUM BRACKET_CLOSE

    NUM  schiebe und gehe zu Zustand 31 über


Zustand 24

   18 function_start: type ID PARA_OPEN .

    $default  reduziere mit Regel 18 (function_start)


Zustand 25

   12 identifier_declaration: ID . BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID .  [COMMA, SEMICOLON, PARA_CLOSE]

    BRACKET_OPEN  schiebe und gehe zu Zustand 23 über

    $default  reduziere mit Regel 13 (identifier_declaration)


Zustand 26

   10 variable_declaration: variable_declaration COMMA identifier_declaration .

    $default  reduziere mit Regel 10 (variable_declaration)


Zustand 27

   14 function_definition: function_start PARA_CLOSE BRACE_OPEN . stmt_list BRACE_CLOSE
   22 stmt_list: . %empty
   23          | . stmt_list stmt

    $default  reduziere mit Regel 22 (stmt_list)

    stmt_list  gehe zu Zustand 32 über


Zustand 28

   21 function_parameter: type identifier_declaration .

    $default  reduziere mit Regel 21 (function_parameter)


Zustand 29

    8 type: . INT
    9     | . VOID
   20 function_parameter_list: function_parameter_list COMMA . function_parameter
   21 function_parameter: . type identifier_declaration

    INT   schiebe und gehe zu Zustand 1 über
    VOID  schiebe und gehe zu Zustand 2 über

    type                gehe zu Zustand 20 über
    function_parameter  gehe zu Zustand 33 über


Zustand 30

   15 function_definition: function_start function_parameter_list PARA_CLOSE . BRACE_OPEN stmt_list BRACE_CLOSE
   17 function_declaration: function_start function_parameter_list PARA_CLOSE .  [SEMICOLON]

    BRACE_OPEN  schiebe und gehe zu Zustand 34 über

    $default  reduziere mit Regel 17 (function_declaration)


Zustand 31

   12 identifier_declaration: ID BRACKET_OPEN NUM . BRACKET_CLOSE

    BRACKET_CLOSE  schiebe und gehe zu Zustand 35 über


Zustand 32

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   14 function_definition: function_start PARA_CLOSE BRACE_OPEN stmt_list . BRACE_CLOSE
   23 stmt_list: stmt_list . stmt
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           schiebe und gehe zu Zustand 36 über
    WHILE        schiebe und gehe zu Zustand 37 über
    IF           schiebe und gehe zu Zustand 38 über
    INT          schiebe und gehe zu Zustand 1 über
    VOID         schiebe und gehe zu Zustand 2 über
    RETURN       schiebe und gehe zu Zustand 39 über
    SEMICOLON    schiebe und gehe zu Zustand 40 über
    BRACE_OPEN   schiebe und gehe zu Zustand 41 über
    BRACE_CLOSE  schiebe und gehe zu Zustand 42 über
    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    type                  gehe zu Zustand 49 über
    variable_declaration  gehe zu Zustand 50 über
    stmt                  gehe zu Zustand 51 über
    stmt_block            gehe zu Zustand 52 über
    stmt_conditional      gehe zu Zustand 53 über
    stmt_loop             gehe zu Zustand 54 über
    expression            gehe zu Zustand 55 über
    primary               gehe zu Zustand 56 über
    function_call         gehe zu Zustand 57 über


Zustand 33

   20 function_parameter_list: function_parameter_list COMMA function_parameter .

    $default  reduziere mit Regel 20 (function_parameter_list)


Zustand 34

   15 function_definition: function_start function_parameter_list PARA_CLOSE BRACE_OPEN . stmt_list BRACE_CLOSE
   22 stmt_list: . %empty
   23          | . stmt_list stmt

    $default  reduziere mit Regel 22 (stmt_list)

    stmt_list  gehe zu Zustand 58 über


Zustand 35

   12 identifier_declaration: ID BRACKET_OPEN NUM BRACKET_CLOSE .

    $default  reduziere mit Regel 12 (identifier_declaration)


Zustand 36

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   36          | DO . stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           schiebe und gehe zu Zustand 36 über
    WHILE        schiebe und gehe zu Zustand 37 über
    IF           schiebe und gehe zu Zustand 38 über
    INT          schiebe und gehe zu Zustand 1 über
    VOID         schiebe und gehe zu Zustand 2 über
    RETURN       schiebe und gehe zu Zustand 39 über
    SEMICOLON    schiebe und gehe zu Zustand 40 über
    BRACE_OPEN   schiebe und gehe zu Zustand 41 über
    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    type                  gehe zu Zustand 49 über
    variable_declaration  gehe zu Zustand 50 über
    stmt                  gehe zu Zustand 59 über
    stmt_block            gehe zu Zustand 52 über
    stmt_conditional      gehe zu Zustand 53 über
    stmt_loop             gehe zu Zustand 54 über
    expression            gehe zu Zustand 55 über
    primary               gehe zu Zustand 56 über
    function_call         gehe zu Zustand 57 über


Zustand 37

   35 stmt_loop: WHILE . PARA_OPEN expression PARA_CLOSE stmt

    PARA_OPEN  schiebe und gehe zu Zustand 60 über


Zustand 38

   33 stmt_conditional: IF . PARA_OPEN expression PARA_CLOSE stmt
   34                 | IF . PARA_OPEN expression PARA_CLOSE stmt ELSE stmt

    PARA_OPEN  schiebe und gehe zu Zustand 61 über


Zustand 39

   29 stmt: RETURN . expression SEMICOLON
   30     | RETURN . SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    SEMICOLON    schiebe und gehe zu Zustand 62 über
    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 63 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 40

   31 stmt: SEMICOLON .

    $default  reduziere mit Regel 31 (stmt)


Zustand 41

   22 stmt_list: . %empty
   23          | . stmt_list stmt
   32 stmt_block: BRACE_OPEN . stmt_list BRACE_CLOSE

    $default  reduziere mit Regel 22 (stmt_list)

    stmt_list  gehe zu Zustand 64 über


Zustand 42

   14 function_definition: function_start PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduziere mit Regel 14 (function_definition)


Zustand 43

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   57           | PARA_OPEN . expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 65 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 44

   56 expression: ID . BRACKET_OPEN primary BRACKET_CLOSE
   61 primary: ID .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]
   62 function_call: ID . PARA_OPEN PARA_CLOSE
   63              | ID . PARA_OPEN function_call_parameters PARA_CLOSE

    BRACKET_OPEN  schiebe und gehe zu Zustand 66 über
    PARA_OPEN     schiebe und gehe zu Zustand 67 über

    $default  reduziere mit Regel 61 (primary)


Zustand 45

   60 primary: NUM .

    $default  reduziere mit Regel 60 (primary)


Zustand 46

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   55           | PLUS . expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 68 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 47

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   54           | MINUS . expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 69 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 48

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   40           | LOGICAL_NOT . expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 70 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 49

   11 variable_declaration: type . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID

    ID  schiebe und gehe zu Zustand 25 über

    identifier_declaration  gehe zu Zustand 15 über


Zustand 50

   10 variable_declaration: variable_declaration . COMMA identifier_declaration
   25 stmt: variable_declaration . SEMICOLON

    COMMA      schiebe und gehe zu Zustand 16 über
    SEMICOLON  schiebe und gehe zu Zustand 71 über


Zustand 51

   23 stmt_list: stmt_list stmt .

    $default  reduziere mit Regel 23 (stmt_list)


Zustand 52

   24 stmt: stmt_block .

    $default  reduziere mit Regel 24 (stmt)


Zustand 53

   27 stmt: stmt_conditional .

    $default  reduziere mit Regel 27 (stmt)


Zustand 54

   28 stmt: stmt_loop .

    $default  reduziere mit Regel 28 (stmt)


Zustand 55

   26 stmt: expression . SEMICOLON
   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    SEMICOLON    schiebe und gehe zu Zustand 72 über
    ASSIGN       schiebe und gehe zu Zustand 73 über
    LOGICAL_OR   schiebe und gehe zu Zustand 74 über
    LOGICAL_AND  schiebe und gehe zu Zustand 75 über
    EQ           schiebe und gehe zu Zustand 76 über
    NE           schiebe und gehe zu Zustand 77 über
    LS           schiebe und gehe zu Zustand 78 über
    LSEQ         schiebe und gehe zu Zustand 79 über
    GTEQ         schiebe und gehe zu Zustand 80 über
    GT           schiebe und gehe zu Zustand 81 über
    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über


Zustand 56

   59 expression: primary .

    $default  reduziere mit Regel 59 (expression)


Zustand 57

   58 expression: function_call .

    $default  reduziere mit Regel 58 (expression)


Zustand 58

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   15 function_definition: function_start function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list . BRACE_CLOSE
   23 stmt_list: stmt_list . stmt
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           schiebe und gehe zu Zustand 36 über
    WHILE        schiebe und gehe zu Zustand 37 über
    IF           schiebe und gehe zu Zustand 38 über
    INT          schiebe und gehe zu Zustand 1 über
    VOID         schiebe und gehe zu Zustand 2 über
    RETURN       schiebe und gehe zu Zustand 39 über
    SEMICOLON    schiebe und gehe zu Zustand 40 über
    BRACE_OPEN   schiebe und gehe zu Zustand 41 über
    BRACE_CLOSE  schiebe und gehe zu Zustand 89 über
    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    type                  gehe zu Zustand 49 über
    variable_declaration  gehe zu Zustand 50 über
    stmt                  gehe zu Zustand 51 über
    stmt_block            gehe zu Zustand 52 über
    stmt_conditional      gehe zu Zustand 53 über
    stmt_loop             gehe zu Zustand 54 über
    expression            gehe zu Zustand 55 über
    primary               gehe zu Zustand 56 über
    function_call         gehe zu Zustand 57 über


Zustand 59

   36 stmt_loop: DO stmt . WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

    WHILE  schiebe und gehe zu Zustand 90 über


Zustand 60

   35 stmt_loop: WHILE PARA_OPEN . expression PARA_CLOSE stmt
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 91 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 61

   33 stmt_conditional: IF PARA_OPEN . expression PARA_CLOSE stmt
   34                 | IF PARA_OPEN . expression PARA_CLOSE stmt ELSE stmt
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 92 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 62

   30 stmt: RETURN SEMICOLON .

    $default  reduziere mit Regel 30 (stmt)


Zustand 63

   29 stmt: RETURN expression . SEMICOLON
   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    SEMICOLON    schiebe und gehe zu Zustand 93 über
    ASSIGN       schiebe und gehe zu Zustand 73 über
    LOGICAL_OR   schiebe und gehe zu Zustand 74 über
    LOGICAL_AND  schiebe und gehe zu Zustand 75 über
    EQ           schiebe und gehe zu Zustand 76 über
    NE           schiebe und gehe zu Zustand 77 über
    LS           schiebe und gehe zu Zustand 78 über
    LSEQ         schiebe und gehe zu Zustand 79 über
    GTEQ         schiebe und gehe zu Zustand 80 über
    GT           schiebe und gehe zu Zustand 81 über
    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über


Zustand 64

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   23 stmt_list: stmt_list . stmt
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   32           | BRACE_OPEN stmt_list . BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           schiebe und gehe zu Zustand 36 über
    WHILE        schiebe und gehe zu Zustand 37 über
    IF           schiebe und gehe zu Zustand 38 über
    INT          schiebe und gehe zu Zustand 1 über
    VOID         schiebe und gehe zu Zustand 2 über
    RETURN       schiebe und gehe zu Zustand 39 über
    SEMICOLON    schiebe und gehe zu Zustand 40 über
    BRACE_OPEN   schiebe und gehe zu Zustand 41 über
    BRACE_CLOSE  schiebe und gehe zu Zustand 94 über
    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    type                  gehe zu Zustand 49 über
    variable_declaration  gehe zu Zustand 50 über
    stmt                  gehe zu Zustand 51 über
    stmt_block            gehe zu Zustand 52 über
    stmt_conditional      gehe zu Zustand 53 über
    stmt_loop             gehe zu Zustand 54 über
    expression            gehe zu Zustand 55 über
    primary               gehe zu Zustand 56 über
    function_call         gehe zu Zustand 57 über


Zustand 65

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression
   57           | PARA_OPEN expression . PARA_CLOSE

    PARA_CLOSE   schiebe und gehe zu Zustand 95 über
    ASSIGN       schiebe und gehe zu Zustand 73 über
    LOGICAL_OR   schiebe und gehe zu Zustand 74 über
    LOGICAL_AND  schiebe und gehe zu Zustand 75 über
    EQ           schiebe und gehe zu Zustand 76 über
    NE           schiebe und gehe zu Zustand 77 über
    LS           schiebe und gehe zu Zustand 78 über
    LSEQ         schiebe und gehe zu Zustand 79 über
    GTEQ         schiebe und gehe zu Zustand 80 über
    GT           schiebe und gehe zu Zustand 81 über
    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über


Zustand 66

   56 expression: ID BRACKET_OPEN . primary BRACKET_CLOSE
   60 primary: . NUM
   61        | . ID

    ID   schiebe und gehe zu Zustand 96 über
    NUM  schiebe und gehe zu Zustand 45 über

    primary  gehe zu Zustand 97 über


Zustand 67

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   62              | ID PARA_OPEN . PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE
   63              | ID PARA_OPEN . function_call_parameters PARA_CLOSE
   64 function_call_parameters: . function_call_parameters COMMA expression
   65                         | . expression

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    PARA_CLOSE   schiebe und gehe zu Zustand 98 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression                gehe zu Zustand 99 über
    primary                   gehe zu Zustand 56 über
    function_call             gehe zu Zustand 57 über
    function_call_parameters  gehe zu Zustand 100 über


Zustand 68

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression
   55           | PLUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]

    $default  reduziere mit Regel 55 (expression)

    Konflikt zwischen Regel 55 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token EQ wurde durch Reduzierung gelöst (EQ < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token NE wurde durch Reduzierung gelöst (NE < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token LS wurde durch Reduzierung gelöst (LS < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token LSEQ wurde durch Reduzierung gelöst (LSEQ < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token GTEQ wurde durch Reduzierung gelöst (GTEQ < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token GT wurde durch Reduzierung gelöst (GT < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token SHIFT_LEFT wurde durch Reduzierung gelöst (SHIFT_LEFT < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token SHIFT_RIGHT wurde durch Reduzierung gelöst (SHIFT_RIGHT < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token PLUS wurde durch Reduzierung gelöst (PLUS < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token MINUS wurde durch Reduzierung gelöst (MINUS < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token MUL wurde durch Reduzierung gelöst (MUL < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token DIV wurde durch Reduzierung gelöst (DIV < UNARY_PLUS).
    Konflikt zwischen Regel 55 and Token MOD wurde durch Reduzierung gelöst (MOD < UNARY_PLUS).


Zustand 69

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression
   54           | MINUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]

    $default  reduziere mit Regel 54 (expression)

    Konflikt zwischen Regel 54 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token EQ wurde durch Reduzierung gelöst (EQ < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token NE wurde durch Reduzierung gelöst (NE < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token LS wurde durch Reduzierung gelöst (LS < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token LSEQ wurde durch Reduzierung gelöst (LSEQ < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token GTEQ wurde durch Reduzierung gelöst (GTEQ < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token GT wurde durch Reduzierung gelöst (GT < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token SHIFT_LEFT wurde durch Reduzierung gelöst (SHIFT_LEFT < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token SHIFT_RIGHT wurde durch Reduzierung gelöst (SHIFT_RIGHT < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token PLUS wurde durch Reduzierung gelöst (PLUS < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token MINUS wurde durch Reduzierung gelöst (MINUS < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token MUL wurde durch Reduzierung gelöst (MUL < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token DIV wurde durch Reduzierung gelöst (DIV < UNARY_MINUS).
    Konflikt zwischen Regel 54 and Token MOD wurde durch Reduzierung gelöst (MOD < UNARY_MINUS).


Zustand 70

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   40           | LOGICAL_NOT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    $default  reduziere mit Regel 40 (expression)

    Konflikt zwischen Regel 40 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token EQ wurde durch Reduzierung gelöst (EQ < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token NE wurde durch Reduzierung gelöst (NE < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token LS wurde durch Reduzierung gelöst (LS < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token LSEQ wurde durch Reduzierung gelöst (LSEQ < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token GTEQ wurde durch Reduzierung gelöst (GTEQ < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token GT wurde durch Reduzierung gelöst (GT < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token SHIFT_LEFT wurde durch Reduzierung gelöst (SHIFT_LEFT < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token SHIFT_RIGHT wurde durch Reduzierung gelöst (SHIFT_RIGHT < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token PLUS wurde durch Reduzierung gelöst (PLUS < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token MINUS wurde durch Reduzierung gelöst (MINUS < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token MUL wurde durch Reduzierung gelöst (MUL < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token DIV wurde durch Reduzierung gelöst (DIV < LOGICAL_NOT).
    Konflikt zwischen Regel 40 and Token MOD wurde durch Reduzierung gelöst (MOD < LOGICAL_NOT).


Zustand 71

   25 stmt: variable_declaration SEMICOLON .

    $default  reduziere mit Regel 25 (stmt)


Zustand 72

   26 stmt: expression SEMICOLON .

    $default  reduziere mit Regel 26 (stmt)


Zustand 73

   37 expression: . expression ASSIGN expression
   37           | expression ASSIGN . expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 101 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 74

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   38           | expression LOGICAL_OR . expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 102 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 75

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   39           | expression LOGICAL_AND . expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 103 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 76

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   41           | expression EQ . expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 104 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 77

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   42           | expression NE . expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 105 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 78

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   43           | expression LS . expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 106 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 79

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   44           | expression LSEQ . expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 107 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 80

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   45           | expression GTEQ . expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 108 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 81

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   46           | expression GT . expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 109 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 82

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   49           | expression SHIFT_LEFT . expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 110 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 83

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   50           | expression SHIFT_RIGHT . expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 111 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 84

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   47           | expression PLUS . expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 112 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 85

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   48           | expression MINUS . expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 113 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 86

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   51           | expression MUL . expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 114 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 87

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   52           | expression DIV . expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 115 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 88

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   53           | expression MOD . expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 116 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 89

   15 function_definition: function_start function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduziere mit Regel 15 (function_definition)


Zustand 90

   36 stmt_loop: DO stmt WHILE . PARA_OPEN expression PARA_CLOSE SEMICOLON

    PARA_OPEN  schiebe und gehe zu Zustand 117 über


Zustand 91

   35 stmt_loop: WHILE PARA_OPEN expression . PARA_CLOSE stmt
   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    PARA_CLOSE   schiebe und gehe zu Zustand 118 über
    ASSIGN       schiebe und gehe zu Zustand 73 über
    LOGICAL_OR   schiebe und gehe zu Zustand 74 über
    LOGICAL_AND  schiebe und gehe zu Zustand 75 über
    EQ           schiebe und gehe zu Zustand 76 über
    NE           schiebe und gehe zu Zustand 77 über
    LS           schiebe und gehe zu Zustand 78 über
    LSEQ         schiebe und gehe zu Zustand 79 über
    GTEQ         schiebe und gehe zu Zustand 80 über
    GT           schiebe und gehe zu Zustand 81 über
    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über


Zustand 92

   33 stmt_conditional: IF PARA_OPEN expression . PARA_CLOSE stmt
   34                 | IF PARA_OPEN expression . PARA_CLOSE stmt ELSE stmt
   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    PARA_CLOSE   schiebe und gehe zu Zustand 119 über
    ASSIGN       schiebe und gehe zu Zustand 73 über
    LOGICAL_OR   schiebe und gehe zu Zustand 74 über
    LOGICAL_AND  schiebe und gehe zu Zustand 75 über
    EQ           schiebe und gehe zu Zustand 76 über
    NE           schiebe und gehe zu Zustand 77 über
    LS           schiebe und gehe zu Zustand 78 über
    LSEQ         schiebe und gehe zu Zustand 79 über
    GTEQ         schiebe und gehe zu Zustand 80 über
    GT           schiebe und gehe zu Zustand 81 über
    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über


Zustand 93

   29 stmt: RETURN expression SEMICOLON .

    $default  reduziere mit Regel 29 (stmt)


Zustand 94

   32 stmt_block: BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduziere mit Regel 32 (stmt_block)


Zustand 95

   57 expression: PARA_OPEN expression PARA_CLOSE .

    $default  reduziere mit Regel 57 (expression)


Zustand 96

   61 primary: ID .

    $default  reduziere mit Regel 61 (primary)


Zustand 97

   56 expression: ID BRACKET_OPEN primary . BRACKET_CLOSE

    BRACKET_CLOSE  schiebe und gehe zu Zustand 120 über


Zustand 98

   62 function_call: ID PARA_OPEN PARA_CLOSE .

    $default  reduziere mit Regel 62 (function_call)


Zustand 99

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression
   65 function_call_parameters: expression .  [COMMA, PARA_CLOSE]

    ASSIGN       schiebe und gehe zu Zustand 73 über
    LOGICAL_OR   schiebe und gehe zu Zustand 74 über
    LOGICAL_AND  schiebe und gehe zu Zustand 75 über
    EQ           schiebe und gehe zu Zustand 76 über
    NE           schiebe und gehe zu Zustand 77 über
    LS           schiebe und gehe zu Zustand 78 über
    LSEQ         schiebe und gehe zu Zustand 79 über
    GTEQ         schiebe und gehe zu Zustand 80 über
    GT           schiebe und gehe zu Zustand 81 über
    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 65 (function_call_parameters)


Zustand 100

   63 function_call: ID PARA_OPEN function_call_parameters . PARA_CLOSE
   64 function_call_parameters: function_call_parameters . COMMA expression

    COMMA       schiebe und gehe zu Zustand 121 über
    PARA_CLOSE  schiebe und gehe zu Zustand 122 über


Zustand 101

   37 expression: expression . ASSIGN expression
   37           | expression ASSIGN expression .  [COMMA, SEMICOLON, PARA_CLOSE]
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    ASSIGN       schiebe und gehe zu Zustand 73 über
    LOGICAL_OR   schiebe und gehe zu Zustand 74 über
    LOGICAL_AND  schiebe und gehe zu Zustand 75 über
    EQ           schiebe und gehe zu Zustand 76 über
    NE           schiebe und gehe zu Zustand 77 über
    LS           schiebe und gehe zu Zustand 78 über
    LSEQ         schiebe und gehe zu Zustand 79 über
    GTEQ         schiebe und gehe zu Zustand 80 über
    GT           schiebe und gehe zu Zustand 81 über
    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 37 (expression)

    Konflikt zwischen Regel 37 and Token ASSIGN wurde durch Schieben gelöst (%right ASSIGN).
    Konflikt zwischen Regel 37 and Token LOGICAL_OR wurde durch Schieben gelöst (ASSIGN < LOGICAL_OR).
    Konflikt zwischen Regel 37 and Token LOGICAL_AND wurde durch Schieben gelöst (ASSIGN < LOGICAL_AND).
    Konflikt zwischen Regel 37 and Token EQ wurde durch Schieben gelöst (ASSIGN < EQ).
    Konflikt zwischen Regel 37 and Token NE wurde durch Schieben gelöst (ASSIGN < NE).
    Konflikt zwischen Regel 37 and Token LS wurde durch Schieben gelöst (ASSIGN < LS).
    Konflikt zwischen Regel 37 and Token LSEQ wurde durch Schieben gelöst (ASSIGN < LSEQ).
    Konflikt zwischen Regel 37 and Token GTEQ wurde durch Schieben gelöst (ASSIGN < GTEQ).
    Konflikt zwischen Regel 37 and Token GT wurde durch Schieben gelöst (ASSIGN < GT).
    Konflikt zwischen Regel 37 and Token SHIFT_LEFT wurde durch Schieben gelöst (ASSIGN < SHIFT_LEFT).
    Konflikt zwischen Regel 37 and Token SHIFT_RIGHT wurde durch Schieben gelöst (ASSIGN < SHIFT_RIGHT).
    Konflikt zwischen Regel 37 and Token PLUS wurde durch Schieben gelöst (ASSIGN < PLUS).
    Konflikt zwischen Regel 37 and Token MINUS wurde durch Schieben gelöst (ASSIGN < MINUS).
    Konflikt zwischen Regel 37 and Token MUL wurde durch Schieben gelöst (ASSIGN < MUL).
    Konflikt zwischen Regel 37 and Token DIV wurde durch Schieben gelöst (ASSIGN < DIV).
    Konflikt zwischen Regel 37 and Token MOD wurde durch Schieben gelöst (ASSIGN < MOD).


Zustand 102

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   38           | expression LOGICAL_OR expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR]
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    LOGICAL_AND  schiebe und gehe zu Zustand 75 über
    EQ           schiebe und gehe zu Zustand 76 über
    NE           schiebe und gehe zu Zustand 77 über
    LS           schiebe und gehe zu Zustand 78 über
    LSEQ         schiebe und gehe zu Zustand 79 über
    GTEQ         schiebe und gehe zu Zustand 80 über
    GT           schiebe und gehe zu Zustand 81 über
    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 38 (expression)

    Konflikt zwischen Regel 38 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < LOGICAL_OR).
    Konflikt zwischen Regel 38 and Token LOGICAL_OR wurde durch Reduzierung gelöst (%left LOGICAL_OR).
    Konflikt zwischen Regel 38 and Token LOGICAL_AND wurde durch Schieben gelöst (LOGICAL_OR < LOGICAL_AND).
    Konflikt zwischen Regel 38 and Token EQ wurde durch Schieben gelöst (LOGICAL_OR < EQ).
    Konflikt zwischen Regel 38 and Token NE wurde durch Schieben gelöst (LOGICAL_OR < NE).
    Konflikt zwischen Regel 38 and Token LS wurde durch Schieben gelöst (LOGICAL_OR < LS).
    Konflikt zwischen Regel 38 and Token LSEQ wurde durch Schieben gelöst (LOGICAL_OR < LSEQ).
    Konflikt zwischen Regel 38 and Token GTEQ wurde durch Schieben gelöst (LOGICAL_OR < GTEQ).
    Konflikt zwischen Regel 38 and Token GT wurde durch Schieben gelöst (LOGICAL_OR < GT).
    Konflikt zwischen Regel 38 and Token SHIFT_LEFT wurde durch Schieben gelöst (LOGICAL_OR < SHIFT_LEFT).
    Konflikt zwischen Regel 38 and Token SHIFT_RIGHT wurde durch Schieben gelöst (LOGICAL_OR < SHIFT_RIGHT).
    Konflikt zwischen Regel 38 and Token PLUS wurde durch Schieben gelöst (LOGICAL_OR < PLUS).
    Konflikt zwischen Regel 38 and Token MINUS wurde durch Schieben gelöst (LOGICAL_OR < MINUS).
    Konflikt zwischen Regel 38 and Token MUL wurde durch Schieben gelöst (LOGICAL_OR < MUL).
    Konflikt zwischen Regel 38 and Token DIV wurde durch Schieben gelöst (LOGICAL_OR < DIV).
    Konflikt zwischen Regel 38 and Token MOD wurde durch Schieben gelöst (LOGICAL_OR < MOD).


Zustand 103

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   39           | expression LOGICAL_AND expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND]
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    EQ           schiebe und gehe zu Zustand 76 über
    NE           schiebe und gehe zu Zustand 77 über
    LS           schiebe und gehe zu Zustand 78 über
    LSEQ         schiebe und gehe zu Zustand 79 über
    GTEQ         schiebe und gehe zu Zustand 80 über
    GT           schiebe und gehe zu Zustand 81 über
    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 39 (expression)

    Konflikt zwischen Regel 39 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < LOGICAL_AND).
    Konflikt zwischen Regel 39 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < LOGICAL_AND).
    Konflikt zwischen Regel 39 and Token LOGICAL_AND wurde durch Reduzierung gelöst (%left LOGICAL_AND).
    Konflikt zwischen Regel 39 and Token EQ wurde durch Schieben gelöst (LOGICAL_AND < EQ).
    Konflikt zwischen Regel 39 and Token NE wurde durch Schieben gelöst (LOGICAL_AND < NE).
    Konflikt zwischen Regel 39 and Token LS wurde durch Schieben gelöst (LOGICAL_AND < LS).
    Konflikt zwischen Regel 39 and Token LSEQ wurde durch Schieben gelöst (LOGICAL_AND < LSEQ).
    Konflikt zwischen Regel 39 and Token GTEQ wurde durch Schieben gelöst (LOGICAL_AND < GTEQ).
    Konflikt zwischen Regel 39 and Token GT wurde durch Schieben gelöst (LOGICAL_AND < GT).
    Konflikt zwischen Regel 39 and Token SHIFT_LEFT wurde durch Schieben gelöst (LOGICAL_AND < SHIFT_LEFT).
    Konflikt zwischen Regel 39 and Token SHIFT_RIGHT wurde durch Schieben gelöst (LOGICAL_AND < SHIFT_RIGHT).
    Konflikt zwischen Regel 39 and Token PLUS wurde durch Schieben gelöst (LOGICAL_AND < PLUS).
    Konflikt zwischen Regel 39 and Token MINUS wurde durch Schieben gelöst (LOGICAL_AND < MINUS).
    Konflikt zwischen Regel 39 and Token MUL wurde durch Schieben gelöst (LOGICAL_AND < MUL).
    Konflikt zwischen Regel 39 and Token DIV wurde durch Schieben gelöst (LOGICAL_AND < DIV).
    Konflikt zwischen Regel 39 and Token MOD wurde durch Schieben gelöst (LOGICAL_AND < MOD).


Zustand 104

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   41           | expression EQ expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE]
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    LS           schiebe und gehe zu Zustand 78 über
    LSEQ         schiebe und gehe zu Zustand 79 über
    GTEQ         schiebe und gehe zu Zustand 80 über
    GT           schiebe und gehe zu Zustand 81 über
    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 41 (expression)

    Konflikt zwischen Regel 41 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < EQ).
    Konflikt zwischen Regel 41 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < EQ).
    Konflikt zwischen Regel 41 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < EQ).
    Konflikt zwischen Regel 41 and Token EQ wurde durch Reduzierung gelöst (%left EQ).
    Konflikt zwischen Regel 41 and Token NE wurde durch Reduzierung gelöst (%left NE).
    Konflikt zwischen Regel 41 and Token LS wurde durch Schieben gelöst (EQ < LS).
    Konflikt zwischen Regel 41 and Token LSEQ wurde durch Schieben gelöst (EQ < LSEQ).
    Konflikt zwischen Regel 41 and Token GTEQ wurde durch Schieben gelöst (EQ < GTEQ).
    Konflikt zwischen Regel 41 and Token GT wurde durch Schieben gelöst (EQ < GT).
    Konflikt zwischen Regel 41 and Token SHIFT_LEFT wurde durch Schieben gelöst (EQ < SHIFT_LEFT).
    Konflikt zwischen Regel 41 and Token SHIFT_RIGHT wurde durch Schieben gelöst (EQ < SHIFT_RIGHT).
    Konflikt zwischen Regel 41 and Token PLUS wurde durch Schieben gelöst (EQ < PLUS).
    Konflikt zwischen Regel 41 and Token MINUS wurde durch Schieben gelöst (EQ < MINUS).
    Konflikt zwischen Regel 41 and Token MUL wurde durch Schieben gelöst (EQ < MUL).
    Konflikt zwischen Regel 41 and Token DIV wurde durch Schieben gelöst (EQ < DIV).
    Konflikt zwischen Regel 41 and Token MOD wurde durch Schieben gelöst (EQ < MOD).


Zustand 105

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   42           | expression NE expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE]
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    LS           schiebe und gehe zu Zustand 78 über
    LSEQ         schiebe und gehe zu Zustand 79 über
    GTEQ         schiebe und gehe zu Zustand 80 über
    GT           schiebe und gehe zu Zustand 81 über
    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 42 (expression)

    Konflikt zwischen Regel 42 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < NE).
    Konflikt zwischen Regel 42 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < NE).
    Konflikt zwischen Regel 42 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < NE).
    Konflikt zwischen Regel 42 and Token EQ wurde durch Reduzierung gelöst (%left EQ).
    Konflikt zwischen Regel 42 and Token NE wurde durch Reduzierung gelöst (%left NE).
    Konflikt zwischen Regel 42 and Token LS wurde durch Schieben gelöst (NE < LS).
    Konflikt zwischen Regel 42 and Token LSEQ wurde durch Schieben gelöst (NE < LSEQ).
    Konflikt zwischen Regel 42 and Token GTEQ wurde durch Schieben gelöst (NE < GTEQ).
    Konflikt zwischen Regel 42 and Token GT wurde durch Schieben gelöst (NE < GT).
    Konflikt zwischen Regel 42 and Token SHIFT_LEFT wurde durch Schieben gelöst (NE < SHIFT_LEFT).
    Konflikt zwischen Regel 42 and Token SHIFT_RIGHT wurde durch Schieben gelöst (NE < SHIFT_RIGHT).
    Konflikt zwischen Regel 42 and Token PLUS wurde durch Schieben gelöst (NE < PLUS).
    Konflikt zwischen Regel 42 and Token MINUS wurde durch Schieben gelöst (NE < MINUS).
    Konflikt zwischen Regel 42 and Token MUL wurde durch Schieben gelöst (NE < MUL).
    Konflikt zwischen Regel 42 and Token DIV wurde durch Schieben gelöst (NE < DIV).
    Konflikt zwischen Regel 42 and Token MOD wurde durch Schieben gelöst (NE < MOD).


Zustand 106

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   43           | expression LS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 43 (expression)

    Konflikt zwischen Regel 43 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < LS).
    Konflikt zwischen Regel 43 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < LS).
    Konflikt zwischen Regel 43 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < LS).
    Konflikt zwischen Regel 43 and Token EQ wurde durch Reduzierung gelöst (EQ < LS).
    Konflikt zwischen Regel 43 and Token NE wurde durch Reduzierung gelöst (NE < LS).
    Konflikt zwischen Regel 43 and Token LS wurde durch Reduzierung gelöst (%left LS).
    Konflikt zwischen Regel 43 and Token LSEQ wurde durch Reduzierung gelöst (%left LSEQ).
    Konflikt zwischen Regel 43 and Token GTEQ wurde durch Reduzierung gelöst (%left GTEQ).
    Konflikt zwischen Regel 43 and Token GT wurde durch Reduzierung gelöst (%left GT).
    Konflikt zwischen Regel 43 and Token SHIFT_LEFT wurde durch Schieben gelöst (LS < SHIFT_LEFT).
    Konflikt zwischen Regel 43 and Token SHIFT_RIGHT wurde durch Schieben gelöst (LS < SHIFT_RIGHT).
    Konflikt zwischen Regel 43 and Token PLUS wurde durch Schieben gelöst (LS < PLUS).
    Konflikt zwischen Regel 43 and Token MINUS wurde durch Schieben gelöst (LS < MINUS).
    Konflikt zwischen Regel 43 and Token MUL wurde durch Schieben gelöst (LS < MUL).
    Konflikt zwischen Regel 43 and Token DIV wurde durch Schieben gelöst (LS < DIV).
    Konflikt zwischen Regel 43 and Token MOD wurde durch Schieben gelöst (LS < MOD).


Zustand 107

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   44           | expression LSEQ expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 44 (expression)

    Konflikt zwischen Regel 44 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < LSEQ).
    Konflikt zwischen Regel 44 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < LSEQ).
    Konflikt zwischen Regel 44 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < LSEQ).
    Konflikt zwischen Regel 44 and Token EQ wurde durch Reduzierung gelöst (EQ < LSEQ).
    Konflikt zwischen Regel 44 and Token NE wurde durch Reduzierung gelöst (NE < LSEQ).
    Konflikt zwischen Regel 44 and Token LS wurde durch Reduzierung gelöst (%left LS).
    Konflikt zwischen Regel 44 and Token LSEQ wurde durch Reduzierung gelöst (%left LSEQ).
    Konflikt zwischen Regel 44 and Token GTEQ wurde durch Reduzierung gelöst (%left GTEQ).
    Konflikt zwischen Regel 44 and Token GT wurde durch Reduzierung gelöst (%left GT).
    Konflikt zwischen Regel 44 and Token SHIFT_LEFT wurde durch Schieben gelöst (LSEQ < SHIFT_LEFT).
    Konflikt zwischen Regel 44 and Token SHIFT_RIGHT wurde durch Schieben gelöst (LSEQ < SHIFT_RIGHT).
    Konflikt zwischen Regel 44 and Token PLUS wurde durch Schieben gelöst (LSEQ < PLUS).
    Konflikt zwischen Regel 44 and Token MINUS wurde durch Schieben gelöst (LSEQ < MINUS).
    Konflikt zwischen Regel 44 and Token MUL wurde durch Schieben gelöst (LSEQ < MUL).
    Konflikt zwischen Regel 44 and Token DIV wurde durch Schieben gelöst (LSEQ < DIV).
    Konflikt zwischen Regel 44 and Token MOD wurde durch Schieben gelöst (LSEQ < MOD).


Zustand 108

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   45           | expression GTEQ expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 45 (expression)

    Konflikt zwischen Regel 45 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < GTEQ).
    Konflikt zwischen Regel 45 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < GTEQ).
    Konflikt zwischen Regel 45 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < GTEQ).
    Konflikt zwischen Regel 45 and Token EQ wurde durch Reduzierung gelöst (EQ < GTEQ).
    Konflikt zwischen Regel 45 and Token NE wurde durch Reduzierung gelöst (NE < GTEQ).
    Konflikt zwischen Regel 45 and Token LS wurde durch Reduzierung gelöst (%left LS).
    Konflikt zwischen Regel 45 and Token LSEQ wurde durch Reduzierung gelöst (%left LSEQ).
    Konflikt zwischen Regel 45 and Token GTEQ wurde durch Reduzierung gelöst (%left GTEQ).
    Konflikt zwischen Regel 45 and Token GT wurde durch Reduzierung gelöst (%left GT).
    Konflikt zwischen Regel 45 and Token SHIFT_LEFT wurde durch Schieben gelöst (GTEQ < SHIFT_LEFT).
    Konflikt zwischen Regel 45 and Token SHIFT_RIGHT wurde durch Schieben gelöst (GTEQ < SHIFT_RIGHT).
    Konflikt zwischen Regel 45 and Token PLUS wurde durch Schieben gelöst (GTEQ < PLUS).
    Konflikt zwischen Regel 45 and Token MINUS wurde durch Schieben gelöst (GTEQ < MINUS).
    Konflikt zwischen Regel 45 and Token MUL wurde durch Schieben gelöst (GTEQ < MUL).
    Konflikt zwischen Regel 45 and Token DIV wurde durch Schieben gelöst (GTEQ < DIV).
    Konflikt zwischen Regel 45 and Token MOD wurde durch Schieben gelöst (GTEQ < MOD).


Zustand 109

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   46           | expression GT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 46 (expression)

    Konflikt zwischen Regel 46 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < GT).
    Konflikt zwischen Regel 46 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < GT).
    Konflikt zwischen Regel 46 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < GT).
    Konflikt zwischen Regel 46 and Token EQ wurde durch Reduzierung gelöst (EQ < GT).
    Konflikt zwischen Regel 46 and Token NE wurde durch Reduzierung gelöst (NE < GT).
    Konflikt zwischen Regel 46 and Token LS wurde durch Reduzierung gelöst (%left LS).
    Konflikt zwischen Regel 46 and Token LSEQ wurde durch Reduzierung gelöst (%left LSEQ).
    Konflikt zwischen Regel 46 and Token GTEQ wurde durch Reduzierung gelöst (%left GTEQ).
    Konflikt zwischen Regel 46 and Token GT wurde durch Reduzierung gelöst (%left GT).
    Konflikt zwischen Regel 46 and Token SHIFT_LEFT wurde durch Schieben gelöst (GT < SHIFT_LEFT).
    Konflikt zwischen Regel 46 and Token SHIFT_RIGHT wurde durch Schieben gelöst (GT < SHIFT_RIGHT).
    Konflikt zwischen Regel 46 and Token PLUS wurde durch Schieben gelöst (GT < PLUS).
    Konflikt zwischen Regel 46 and Token MINUS wurde durch Schieben gelöst (GT < MINUS).
    Konflikt zwischen Regel 46 and Token MUL wurde durch Schieben gelöst (GT < MUL).
    Konflikt zwischen Regel 46 and Token DIV wurde durch Schieben gelöst (GT < DIV).
    Konflikt zwischen Regel 46 and Token MOD wurde durch Schieben gelöst (GT < MOD).


Zustand 110

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   49           | expression SHIFT_LEFT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT]
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    PLUS   schiebe und gehe zu Zustand 84 über
    MINUS  schiebe und gehe zu Zustand 85 über
    MUL    schiebe und gehe zu Zustand 86 über
    DIV    schiebe und gehe zu Zustand 87 über
    MOD    schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 49 (expression)

    Konflikt zwischen Regel 49 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < SHIFT_LEFT).
    Konflikt zwischen Regel 49 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < SHIFT_LEFT).
    Konflikt zwischen Regel 49 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < SHIFT_LEFT).
    Konflikt zwischen Regel 49 and Token EQ wurde durch Reduzierung gelöst (EQ < SHIFT_LEFT).
    Konflikt zwischen Regel 49 and Token NE wurde durch Reduzierung gelöst (NE < SHIFT_LEFT).
    Konflikt zwischen Regel 49 and Token LS wurde durch Reduzierung gelöst (LS < SHIFT_LEFT).
    Konflikt zwischen Regel 49 and Token LSEQ wurde durch Reduzierung gelöst (LSEQ < SHIFT_LEFT).
    Konflikt zwischen Regel 49 and Token GTEQ wurde durch Reduzierung gelöst (GTEQ < SHIFT_LEFT).
    Konflikt zwischen Regel 49 and Token GT wurde durch Reduzierung gelöst (GT < SHIFT_LEFT).
    Konflikt zwischen Regel 49 and Token SHIFT_LEFT wurde durch Reduzierung gelöst (%left SHIFT_LEFT).
    Konflikt zwischen Regel 49 and Token SHIFT_RIGHT wurde durch Reduzierung gelöst (%left SHIFT_RIGHT).
    Konflikt zwischen Regel 49 and Token PLUS wurde durch Schieben gelöst (SHIFT_LEFT < PLUS).
    Konflikt zwischen Regel 49 and Token MINUS wurde durch Schieben gelöst (SHIFT_LEFT < MINUS).
    Konflikt zwischen Regel 49 and Token MUL wurde durch Schieben gelöst (SHIFT_LEFT < MUL).
    Konflikt zwischen Regel 49 and Token DIV wurde durch Schieben gelöst (SHIFT_LEFT < DIV).
    Konflikt zwischen Regel 49 and Token MOD wurde durch Schieben gelöst (SHIFT_LEFT < MOD).


Zustand 111

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   50           | expression SHIFT_RIGHT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT]
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    PLUS   schiebe und gehe zu Zustand 84 über
    MINUS  schiebe und gehe zu Zustand 85 über
    MUL    schiebe und gehe zu Zustand 86 über
    DIV    schiebe und gehe zu Zustand 87 über
    MOD    schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 50 (expression)

    Konflikt zwischen Regel 50 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < SHIFT_RIGHT).
    Konflikt zwischen Regel 50 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < SHIFT_RIGHT).
    Konflikt zwischen Regel 50 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < SHIFT_RIGHT).
    Konflikt zwischen Regel 50 and Token EQ wurde durch Reduzierung gelöst (EQ < SHIFT_RIGHT).
    Konflikt zwischen Regel 50 and Token NE wurde durch Reduzierung gelöst (NE < SHIFT_RIGHT).
    Konflikt zwischen Regel 50 and Token LS wurde durch Reduzierung gelöst (LS < SHIFT_RIGHT).
    Konflikt zwischen Regel 50 and Token LSEQ wurde durch Reduzierung gelöst (LSEQ < SHIFT_RIGHT).
    Konflikt zwischen Regel 50 and Token GTEQ wurde durch Reduzierung gelöst (GTEQ < SHIFT_RIGHT).
    Konflikt zwischen Regel 50 and Token GT wurde durch Reduzierung gelöst (GT < SHIFT_RIGHT).
    Konflikt zwischen Regel 50 and Token SHIFT_LEFT wurde durch Reduzierung gelöst (%left SHIFT_LEFT).
    Konflikt zwischen Regel 50 and Token SHIFT_RIGHT wurde durch Reduzierung gelöst (%left SHIFT_RIGHT).
    Konflikt zwischen Regel 50 and Token PLUS wurde durch Schieben gelöst (SHIFT_RIGHT < PLUS).
    Konflikt zwischen Regel 50 and Token MINUS wurde durch Schieben gelöst (SHIFT_RIGHT < MINUS).
    Konflikt zwischen Regel 50 and Token MUL wurde durch Schieben gelöst (SHIFT_RIGHT < MUL).
    Konflikt zwischen Regel 50 and Token DIV wurde durch Schieben gelöst (SHIFT_RIGHT < DIV).
    Konflikt zwischen Regel 50 and Token MOD wurde durch Schieben gelöst (SHIFT_RIGHT < MOD).


Zustand 112

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   47           | expression PLUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS]
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    MUL  schiebe und gehe zu Zustand 86 über
    DIV  schiebe und gehe zu Zustand 87 über
    MOD  schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 47 (expression)

    Konflikt zwischen Regel 47 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < PLUS).
    Konflikt zwischen Regel 47 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < PLUS).
    Konflikt zwischen Regel 47 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < PLUS).
    Konflikt zwischen Regel 47 and Token EQ wurde durch Reduzierung gelöst (EQ < PLUS).
    Konflikt zwischen Regel 47 and Token NE wurde durch Reduzierung gelöst (NE < PLUS).
    Konflikt zwischen Regel 47 and Token LS wurde durch Reduzierung gelöst (LS < PLUS).
    Konflikt zwischen Regel 47 and Token LSEQ wurde durch Reduzierung gelöst (LSEQ < PLUS).
    Konflikt zwischen Regel 47 and Token GTEQ wurde durch Reduzierung gelöst (GTEQ < PLUS).
    Konflikt zwischen Regel 47 and Token GT wurde durch Reduzierung gelöst (GT < PLUS).
    Konflikt zwischen Regel 47 and Token SHIFT_LEFT wurde durch Reduzierung gelöst (SHIFT_LEFT < PLUS).
    Konflikt zwischen Regel 47 and Token SHIFT_RIGHT wurde durch Reduzierung gelöst (SHIFT_RIGHT < PLUS).
    Konflikt zwischen Regel 47 and Token PLUS wurde durch Reduzierung gelöst (%left PLUS).
    Konflikt zwischen Regel 47 and Token MINUS wurde durch Reduzierung gelöst (%left MINUS).
    Konflikt zwischen Regel 47 and Token MUL wurde durch Schieben gelöst (PLUS < MUL).
    Konflikt zwischen Regel 47 and Token DIV wurde durch Schieben gelöst (PLUS < DIV).
    Konflikt zwischen Regel 47 and Token MOD wurde durch Schieben gelöst (PLUS < MOD).


Zustand 113

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   48           | expression MINUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS]
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    MUL  schiebe und gehe zu Zustand 86 über
    DIV  schiebe und gehe zu Zustand 87 über
    MOD  schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 48 (expression)

    Konflikt zwischen Regel 48 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < MINUS).
    Konflikt zwischen Regel 48 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < MINUS).
    Konflikt zwischen Regel 48 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < MINUS).
    Konflikt zwischen Regel 48 and Token EQ wurde durch Reduzierung gelöst (EQ < MINUS).
    Konflikt zwischen Regel 48 and Token NE wurde durch Reduzierung gelöst (NE < MINUS).
    Konflikt zwischen Regel 48 and Token LS wurde durch Reduzierung gelöst (LS < MINUS).
    Konflikt zwischen Regel 48 and Token LSEQ wurde durch Reduzierung gelöst (LSEQ < MINUS).
    Konflikt zwischen Regel 48 and Token GTEQ wurde durch Reduzierung gelöst (GTEQ < MINUS).
    Konflikt zwischen Regel 48 and Token GT wurde durch Reduzierung gelöst (GT < MINUS).
    Konflikt zwischen Regel 48 and Token SHIFT_LEFT wurde durch Reduzierung gelöst (SHIFT_LEFT < MINUS).
    Konflikt zwischen Regel 48 and Token SHIFT_RIGHT wurde durch Reduzierung gelöst (SHIFT_RIGHT < MINUS).
    Konflikt zwischen Regel 48 and Token PLUS wurde durch Reduzierung gelöst (%left PLUS).
    Konflikt zwischen Regel 48 and Token MINUS wurde durch Reduzierung gelöst (%left MINUS).
    Konflikt zwischen Regel 48 and Token MUL wurde durch Schieben gelöst (MINUS < MUL).
    Konflikt zwischen Regel 48 and Token DIV wurde durch Schieben gelöst (MINUS < DIV).
    Konflikt zwischen Regel 48 and Token MOD wurde durch Schieben gelöst (MINUS < MOD).


Zustand 114

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   51           | expression MUL expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]
   52           | expression . DIV expression
   53           | expression . MOD expression

    $default  reduziere mit Regel 51 (expression)

    Konflikt zwischen Regel 51 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < MUL).
    Konflikt zwischen Regel 51 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < MUL).
    Konflikt zwischen Regel 51 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < MUL).
    Konflikt zwischen Regel 51 and Token EQ wurde durch Reduzierung gelöst (EQ < MUL).
    Konflikt zwischen Regel 51 and Token NE wurde durch Reduzierung gelöst (NE < MUL).
    Konflikt zwischen Regel 51 and Token LS wurde durch Reduzierung gelöst (LS < MUL).
    Konflikt zwischen Regel 51 and Token LSEQ wurde durch Reduzierung gelöst (LSEQ < MUL).
    Konflikt zwischen Regel 51 and Token GTEQ wurde durch Reduzierung gelöst (GTEQ < MUL).
    Konflikt zwischen Regel 51 and Token GT wurde durch Reduzierung gelöst (GT < MUL).
    Konflikt zwischen Regel 51 and Token SHIFT_LEFT wurde durch Reduzierung gelöst (SHIFT_LEFT < MUL).
    Konflikt zwischen Regel 51 and Token SHIFT_RIGHT wurde durch Reduzierung gelöst (SHIFT_RIGHT < MUL).
    Konflikt zwischen Regel 51 and Token PLUS wurde durch Reduzierung gelöst (PLUS < MUL).
    Konflikt zwischen Regel 51 and Token MINUS wurde durch Reduzierung gelöst (MINUS < MUL).
    Konflikt zwischen Regel 51 and Token MUL wurde durch Reduzierung gelöst (%left MUL).
    Konflikt zwischen Regel 51 and Token DIV wurde durch Reduzierung gelöst (%left DIV).
    Konflikt zwischen Regel 51 and Token MOD wurde durch Reduzierung gelöst (%left MOD).


Zustand 115

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   52           | expression DIV expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]
   53           | expression . MOD expression

    $default  reduziere mit Regel 52 (expression)

    Konflikt zwischen Regel 52 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < DIV).
    Konflikt zwischen Regel 52 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < DIV).
    Konflikt zwischen Regel 52 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < DIV).
    Konflikt zwischen Regel 52 and Token EQ wurde durch Reduzierung gelöst (EQ < DIV).
    Konflikt zwischen Regel 52 and Token NE wurde durch Reduzierung gelöst (NE < DIV).
    Konflikt zwischen Regel 52 and Token LS wurde durch Reduzierung gelöst (LS < DIV).
    Konflikt zwischen Regel 52 and Token LSEQ wurde durch Reduzierung gelöst (LSEQ < DIV).
    Konflikt zwischen Regel 52 and Token GTEQ wurde durch Reduzierung gelöst (GTEQ < DIV).
    Konflikt zwischen Regel 52 and Token GT wurde durch Reduzierung gelöst (GT < DIV).
    Konflikt zwischen Regel 52 and Token SHIFT_LEFT wurde durch Reduzierung gelöst (SHIFT_LEFT < DIV).
    Konflikt zwischen Regel 52 and Token SHIFT_RIGHT wurde durch Reduzierung gelöst (SHIFT_RIGHT < DIV).
    Konflikt zwischen Regel 52 and Token PLUS wurde durch Reduzierung gelöst (PLUS < DIV).
    Konflikt zwischen Regel 52 and Token MINUS wurde durch Reduzierung gelöst (MINUS < DIV).
    Konflikt zwischen Regel 52 and Token MUL wurde durch Reduzierung gelöst (%left MUL).
    Konflikt zwischen Regel 52 and Token DIV wurde durch Reduzierung gelöst (%left DIV).
    Konflikt zwischen Regel 52 and Token MOD wurde durch Reduzierung gelöst (%left MOD).


Zustand 116

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression
   53           | expression MOD expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]

    $default  reduziere mit Regel 53 (expression)

    Konflikt zwischen Regel 53 and Token ASSIGN wurde durch Reduzierung gelöst (ASSIGN < MOD).
    Konflikt zwischen Regel 53 and Token LOGICAL_OR wurde durch Reduzierung gelöst (LOGICAL_OR < MOD).
    Konflikt zwischen Regel 53 and Token LOGICAL_AND wurde durch Reduzierung gelöst (LOGICAL_AND < MOD).
    Konflikt zwischen Regel 53 and Token EQ wurde durch Reduzierung gelöst (EQ < MOD).
    Konflikt zwischen Regel 53 and Token NE wurde durch Reduzierung gelöst (NE < MOD).
    Konflikt zwischen Regel 53 and Token LS wurde durch Reduzierung gelöst (LS < MOD).
    Konflikt zwischen Regel 53 and Token LSEQ wurde durch Reduzierung gelöst (LSEQ < MOD).
    Konflikt zwischen Regel 53 and Token GTEQ wurde durch Reduzierung gelöst (GTEQ < MOD).
    Konflikt zwischen Regel 53 and Token GT wurde durch Reduzierung gelöst (GT < MOD).
    Konflikt zwischen Regel 53 and Token SHIFT_LEFT wurde durch Reduzierung gelöst (SHIFT_LEFT < MOD).
    Konflikt zwischen Regel 53 and Token SHIFT_RIGHT wurde durch Reduzierung gelöst (SHIFT_RIGHT < MOD).
    Konflikt zwischen Regel 53 and Token PLUS wurde durch Reduzierung gelöst (PLUS < MOD).
    Konflikt zwischen Regel 53 and Token MINUS wurde durch Reduzierung gelöst (MINUS < MOD).
    Konflikt zwischen Regel 53 and Token MUL wurde durch Reduzierung gelöst (%left MUL).
    Konflikt zwischen Regel 53 and Token DIV wurde durch Reduzierung gelöst (%left DIV).
    Konflikt zwischen Regel 53 and Token MOD wurde durch Reduzierung gelöst (%left MOD).


Zustand 117

   36 stmt_loop: DO stmt WHILE PARA_OPEN . expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 123 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 118

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   35          | WHILE PARA_OPEN expression PARA_CLOSE . stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           schiebe und gehe zu Zustand 36 über
    WHILE        schiebe und gehe zu Zustand 37 über
    IF           schiebe und gehe zu Zustand 38 über
    INT          schiebe und gehe zu Zustand 1 über
    VOID         schiebe und gehe zu Zustand 2 über
    RETURN       schiebe und gehe zu Zustand 39 über
    SEMICOLON    schiebe und gehe zu Zustand 40 über
    BRACE_OPEN   schiebe und gehe zu Zustand 41 über
    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    type                  gehe zu Zustand 49 über
    variable_declaration  gehe zu Zustand 50 über
    stmt                  gehe zu Zustand 124 über
    stmt_block            gehe zu Zustand 52 über
    stmt_conditional      gehe zu Zustand 53 über
    stmt_loop             gehe zu Zustand 54 über
    expression            gehe zu Zustand 55 über
    primary               gehe zu Zustand 56 über
    function_call         gehe zu Zustand 57 über


Zustand 119

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   33                 | IF PARA_OPEN expression PARA_CLOSE . stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   34                 | IF PARA_OPEN expression PARA_CLOSE . stmt ELSE stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           schiebe und gehe zu Zustand 36 über
    WHILE        schiebe und gehe zu Zustand 37 über
    IF           schiebe und gehe zu Zustand 38 über
    INT          schiebe und gehe zu Zustand 1 über
    VOID         schiebe und gehe zu Zustand 2 über
    RETURN       schiebe und gehe zu Zustand 39 über
    SEMICOLON    schiebe und gehe zu Zustand 40 über
    BRACE_OPEN   schiebe und gehe zu Zustand 41 über
    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    type                  gehe zu Zustand 49 über
    variable_declaration  gehe zu Zustand 50 über
    stmt                  gehe zu Zustand 125 über
    stmt_block            gehe zu Zustand 52 über
    stmt_conditional      gehe zu Zustand 53 über
    stmt_loop             gehe zu Zustand 54 über
    expression            gehe zu Zustand 55 über
    primary               gehe zu Zustand 56 über
    function_call         gehe zu Zustand 57 über


Zustand 120

   56 expression: ID BRACKET_OPEN primary BRACKET_CLOSE .

    $default  reduziere mit Regel 56 (expression)


Zustand 121

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE
   64 function_call_parameters: function_call_parameters COMMA . expression

    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    expression     gehe zu Zustand 126 über
    primary        gehe zu Zustand 56 über
    function_call  gehe zu Zustand 57 über


Zustand 122

   63 function_call: ID PARA_OPEN function_call_parameters PARA_CLOSE .

    $default  reduziere mit Regel 63 (function_call)


Zustand 123

   36 stmt_loop: DO stmt WHILE PARA_OPEN expression . PARA_CLOSE SEMICOLON
   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression

    PARA_CLOSE   schiebe und gehe zu Zustand 127 über
    ASSIGN       schiebe und gehe zu Zustand 73 über
    LOGICAL_OR   schiebe und gehe zu Zustand 74 über
    LOGICAL_AND  schiebe und gehe zu Zustand 75 über
    EQ           schiebe und gehe zu Zustand 76 über
    NE           schiebe und gehe zu Zustand 77 über
    LS           schiebe und gehe zu Zustand 78 über
    LSEQ         schiebe und gehe zu Zustand 79 über
    GTEQ         schiebe und gehe zu Zustand 80 über
    GT           schiebe und gehe zu Zustand 81 über
    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über


Zustand 124

   35 stmt_loop: WHILE PARA_OPEN expression PARA_CLOSE stmt .

    $default  reduziere mit Regel 35 (stmt_loop)


Zustand 125

   33 stmt_conditional: IF PARA_OPEN expression PARA_CLOSE stmt .  [DO, WHILE, IF, ELSE, INT, VOID, RETURN, SEMICOLON, BRACE_OPEN, BRACE_CLOSE, PARA_OPEN, ID, NUM, PLUS, MINUS, LOGICAL_NOT]
   34                 | IF PARA_OPEN expression PARA_CLOSE stmt . ELSE stmt

    ELSE  schiebe und gehe zu Zustand 128 über

    ELSE      [reduziere mit Regel 33 (stmt_conditional)]
    $default  reduziere mit Regel 33 (stmt_conditional)


Zustand 126

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . DIV expression
   53           | expression . MOD expression
   64 function_call_parameters: function_call_parameters COMMA expression .  [COMMA, PARA_CLOSE]

    ASSIGN       schiebe und gehe zu Zustand 73 über
    LOGICAL_OR   schiebe und gehe zu Zustand 74 über
    LOGICAL_AND  schiebe und gehe zu Zustand 75 über
    EQ           schiebe und gehe zu Zustand 76 über
    NE           schiebe und gehe zu Zustand 77 über
    LS           schiebe und gehe zu Zustand 78 über
    LSEQ         schiebe und gehe zu Zustand 79 über
    GTEQ         schiebe und gehe zu Zustand 80 über
    GT           schiebe und gehe zu Zustand 81 über
    SHIFT_LEFT   schiebe und gehe zu Zustand 82 über
    SHIFT_RIGHT  schiebe und gehe zu Zustand 83 über
    PLUS         schiebe und gehe zu Zustand 84 über
    MINUS        schiebe und gehe zu Zustand 85 über
    MUL          schiebe und gehe zu Zustand 86 über
    DIV          schiebe und gehe zu Zustand 87 über
    MOD          schiebe und gehe zu Zustand 88 über

    $default  reduziere mit Regel 64 (function_call_parameters)


Zustand 127

   36 stmt_loop: DO stmt WHILE PARA_OPEN expression PARA_CLOSE . SEMICOLON

    SEMICOLON  schiebe und gehe zu Zustand 129 über


Zustand 128

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   34                 | IF PARA_OPEN expression PARA_CLOSE stmt ELSE . stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression DIV expression
   53           | . expression MOD expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           schiebe und gehe zu Zustand 36 über
    WHILE        schiebe und gehe zu Zustand 37 über
    IF           schiebe und gehe zu Zustand 38 über
    INT          schiebe und gehe zu Zustand 1 über
    VOID         schiebe und gehe zu Zustand 2 über
    RETURN       schiebe und gehe zu Zustand 39 über
    SEMICOLON    schiebe und gehe zu Zustand 40 über
    BRACE_OPEN   schiebe und gehe zu Zustand 41 über
    PARA_OPEN    schiebe und gehe zu Zustand 43 über
    ID           schiebe und gehe zu Zustand 44 über
    NUM          schiebe und gehe zu Zustand 45 über
    PLUS         schiebe und gehe zu Zustand 46 über
    MINUS        schiebe und gehe zu Zustand 47 über
    LOGICAL_NOT  schiebe und gehe zu Zustand 48 über

    type                  gehe zu Zustand 49 über
    variable_declaration  gehe zu Zustand 50 über
    stmt                  gehe zu Zustand 130 über
    stmt_block            gehe zu Zustand 52 über
    stmt_conditional      gehe zu Zustand 53 über
    stmt_loop             gehe zu Zustand 54 über
    expression            gehe zu Zustand 55 über
    primary               gehe zu Zustand 56 über
    function_call         gehe zu Zustand 57 über


Zustand 129

   36 stmt_loop: DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON .

    $default  reduziere mit Regel 36 (stmt_loop)


Zustand 130

   34 stmt_conditional: IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt .

    $default  reduziere mit Regel 34 (stmt_conditional)
